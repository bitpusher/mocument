//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace Mocument.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class TapesEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new TapesEntities object using the connection string found in the 'TapesEntities' section of the application configuration file.
        /// </summary>
        public TapesEntities() : base("name=TapesEntities", "TapesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TapesEntities object.
        /// </summary>
        public TapesEntities(string connectionString) : base(connectionString, "TapesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TapesEntities object.
        /// </summary>
        public TapesEntities(EntityConnection connection) : base(connection, "TapesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tape> Tapes
        {
            get
            {
                if ((_Tapes == null))
                {
                    _Tapes = base.CreateObjectSet<Tape>("Tapes");
                }
                return _Tapes;
            }
        }
        private ObjectSet<Tape> _Tapes;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tapes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTapes(Tape tape)
        {
            base.AddObject("Tapes", tape);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TapesModel", Name="Tape")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tape : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tape object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="openForRecording">Initial value of the OpenForRecording property.</param>
        public static Tape CreateTape(global::System.String id, global::System.Boolean openForRecording)
        {
            Tape tape = new Tape();
            tape.Id = id;
            tape.OpenForRecording = openForRecording;
            return tape;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean OpenForRecording
        {
            get
            {
                return _OpenForRecording;
            }
            set
            {
                OnOpenForRecordingChanging(value);
                ReportPropertyChanging("OpenForRecording");
                _OpenForRecording = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OpenForRecording");
                OnOpenForRecordingChanged();
            }
        }
        private global::System.Boolean _OpenForRecording;
        partial void OnOpenForRecordingChanging(global::System.Boolean value);
        partial void OnOpenForRecordingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AllowedIpAddress
        {
            get
            {
                return _AllowedIpAddress;
            }
            set
            {
                OnAllowedIpAddressChanging(value);
                ReportPropertyChanging("AllowedIpAddress");
                _AllowedIpAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AllowedIpAddress");
                OnAllowedIpAddressChanged();
            }
        }
        private global::System.String _AllowedIpAddress;
        partial void OnAllowedIpAddressChanging(global::System.String value);
        partial void OnAllowedIpAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.String _Content;
        partial void OnContentChanging(global::System.String value);
        partial void OnContentChanged();

        #endregion

    
    }

    #endregion

    
}
